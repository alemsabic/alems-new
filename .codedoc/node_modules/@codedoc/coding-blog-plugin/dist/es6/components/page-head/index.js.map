{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/page-head/index.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAMxC,MAAM,UAAU,QAAQ,CAAC,KAAa;IACpC,OAAO,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,MAAM;QAC1D,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,kBAAkB,IAAI,KAAK,KAAK,YAAY,CAAC;AACvF,CAAC;AAYD,MAAM,UAAU,QAAQ,CAEtB,OAAwB,EACxB,QAAgC,EAChC,OAAY;IAEZ,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAClD,IAAI,MAAM,GAAG,SAAS,CAAC;IACvB,IAAI,MAAM,GAAG,SAAS,CAAC;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE;QACjB,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YAAE,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;;YAC/C,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;KAC7B;IAED,OAAO,wBAAI,KAAK,EAAE,GAAG,OAAO,CAAC,CAAC,IAAI,MAAM,IAAI,EAAE,EAAE;QAC9C,0BAAM,KAAK,EAAE,GAAG,MAAM,CAAA,CAAC,CAAA,UAAU,MAAM,GAAG,CAAA,CAAC,CAAA,EAAE;qBAC5B,OAAO,CAAC,MAAM,IAAI,qBAAqB;mBACzC,OAAO,CAAC,IAAI,IAAI,MAAM,EAAE;YAEtC,OAAO,CAAC,IAAI,CAAA,CAAC;gBACZ,0BAAM,KAAK,EAAE,cAAc,OAAO,CAAC,QAAQ,IAAI,MAAM,yCAAyC;oBAC3F,OAAO,CAAC,IAAI;6BACR;gBACP,CAAC,CAAC,EAAE;YACL,OAAO,CACD,CACJ,CAAA;AACP,CAAC","sourcesContent":["import { RendererLike } from '@connectv/html';\nimport { ThemedComponentThis } from '@connectv/jss-theme';\nimport { CodedocTheme } from '@codedoc/core';\n\nimport { PageHeadStyle } from './style';\n\n\nexport type PageHeadColorPreset = 'black' | 'white' | 'text' | 'background' | 'primary' | 'primary-contrast';\n\n\nexport function isPreset(color: string): color is PageHeadColorPreset {\n  return color === 'black' || color === 'white' || color === 'text' ||\n         color === 'primary' || color === 'primary-contrast' || color === 'background';\n}\n\n\nexport interface PageHeadOptions {\n  lead?: string;\n  color?: PageHeadColorPreset | string;\n  shadow?: string;\n  size?: string;\n  leadSize?: string;\n}\n\n\nexport function PageHead(\n  this: ThemedComponentThis<CodedocTheme>,\n  options: PageHeadOptions, \n  renderer: RendererLike<any, any>, \n  content: any\n) {\n  const classes = this.theme.classes(PageHeadStyle);\n  let _color = undefined;\n  let _class = undefined;\n\n  if (options.color) {\n    if (isPreset(options.color)) _class = options.color;\n    else _color = options.color;\n  }\n\n  return <h1 class={`${classes.h} ${_class || ''}`}>\n    <span style={`${_color?`color: ${_color};`:''} \n      text-shadow: ${options.shadow || '0 2px 6px #000000C8'}; \n      font-size: ${options.size || '48px'}`\n    }>\n    {options.lead? \n      <span style={`font-size: ${options.leadSize || '24px'};  margin-bottom: -48px; display: block`}>\n        {options.lead}&nbsp;\n      </span>\n      : ''}\n    {content}\n    </span>\n  </h1>\n}"]}