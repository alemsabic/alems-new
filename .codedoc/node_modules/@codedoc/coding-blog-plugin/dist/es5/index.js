"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.codingBlog = void 0;
var count_cards_1 = require("./components/article-card/count-cards");
var components_1 = require("./components");
var post_1 = require("./post");
var feed_1 = require("./feed");
var post_2 = require("./components/tag/post");
var post_3 = require("./components/moved/post");
function codingBlog(options) {
    return function () {
        var _feed = (options === null || options === void 0 ? void 0 : options.feed) ? feed_1.feed(options.feed) : undefined;
        return {
            markdown: {
                customComponents: {
                    Author: components_1.Author, ArticleCard: components_1.ArticleCard, Big: components_1.Big, Small: components_1.Small, Center: components_1.Center, Quote: components_1.Quote, Hero: components_1.Hero, Title: components_1.Title, Space: components_1.Space, Watermark: components_1.Watermark, Moved: components_1.Moved
                },
                customInlineComponents: {
                    Tag: components_1.Tag
                }
            },
            bundle: {
                init: [count_cards_1.countCards$]
            },
            page: {
                post: __spreadArrays([
                    post_1.addGitHubConfig(),
                    post_1.addSource(),
                    post_1.addStyles(),
                    post_1.addTwitterMeta(),
                    post_1.addOGMeta(),
                    post_2.addTagMeta(),
                    post_3.addRedirectMeta()
                ], _feed ? [_feed.collect] : [])
            },
            afterBuild: _feed ? [_feed.save] : undefined,
            misc: {
                coding_blog: {
                    assets: (options === null || options === void 0 ? void 0 : options.assets) || []
                }
            }
        };
    };
}
exports.codingBlog = codingBlog;
//# sourceMappingURL=index.js.map