"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Author$ = exports.Author = void 0;
var html_1 = require("@connectv/html");
var transport_1 = require("@connectv/sdh/transport");
var rxjs_1 = require("rxjs");
var ajax_1 = require("rxjs/ajax");
var style_1 = require("./style");
function isDirect(options) {
    return !options.src;
}
var _DefaultAvatar = 'https://www.wallpaperup.com/uploads/wallpapers/2017/09/17/1099153/afb7cf163e10008fb6ca7ca80e8c9a6d-700.jpg';
function Author(options, renderer) {
    var classes = this.theme.classes(style_1.AuthorStyle);
    var avatar = new rxjs_1.BehaviorSubject(_DefaultAvatar);
    var name = new rxjs_1.BehaviorSubject('Anonymous Author');
    var date = new rxjs_1.BehaviorSubject('Unspecified Date');
    var url = new rxjs_1.BehaviorSubject('');
    this.track({
        bind: function () {
            if (isDirect(options)) {
                name.next(options.name);
                date.next(options.date);
                if (options.avatar)
                    avatar.next(options.avatar);
                if (options.url)
                    url.next(options.url);
            }
            else {
                if (options.src === 'github') {
                    var src = window.source;
                    var github = window.githubConfig;
                    if (src && github) {
                        ajax_1.ajax.getJSON("https://api.github.com/repos/" + github.user + "/" + github.repo + "/commits"
                            + ("?path=" + src.base + "/" + src.path))
                            .subscribe(function (res) {
                            var _a, _b;
                            if (res.length) {
                                var commit = res[0];
                                avatar.next(((_a = commit.author) === null || _a === void 0 ? void 0 : _a.avatar_url) || _DefaultAvatar);
                                url.next(((_b = commit.author) === null || _b === void 0 ? void 0 : _b.html_url) || '');
                                name.next(commit.commit.author.name);
                                var dateString = !!options.date ? options.date : commit.commit.author.date;
                                date.next(new Date(dateString).toDateString());
                            }
                        });
                    }
                }
            }
        }
    });
    return renderer.create("a", { class: classes.author, href: url, target: "_blank" },
        renderer.create("div", { class: classes.avatar, style: html_1.rxLiteral(templateObject_1 || (templateObject_1 = __makeTemplateObject(["background-image: url(", ")"], ["background-image: url(", ")"])), avatar) }),
        renderer.create("div", { class: classes.texts },
            renderer.create("div", { class: classes.name }, name),
            renderer.create("div", { class: classes.date },
                renderer.create("label", null, "Last Publish:"),
                " ",
                date)));
}
exports.Author = Author;
exports.Author$ = transport_1.transport(Author);
var templateObject_1;
//# sourceMappingURL=index.js.map