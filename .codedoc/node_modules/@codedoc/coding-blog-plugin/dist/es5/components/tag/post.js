"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addTagMeta = void 0;
var sdh_1 = require("@connectv/sdh");
function addTagMeta() {
    var renderer = new sdh_1.StaticRenderer();
    return function (html) {
        var _a;
        var tags = [];
        html.querySelectorAll('[data-page-tag]').forEach(function (el$) {
            var tag = el$.getAttribute('data-page-tag') || '';
            if (tag.length > 0)
                tags.push(tag);
        });
        var metaKeywords = html.querySelector('meta[name="keywords"]');
        if (!metaKeywords) {
            metaKeywords = renderer.create("meta", { name: 'keywords', content: "" });
            renderer.render(metaKeywords).on(html.head);
        }
        metaKeywords.setAttribute('content', __spreadArrays((((_a = metaKeywords.getAttribute('content')) === null || _a === void 0 ? void 0 : _a.split(',').map(function (_) { return _.trim(); }).filter(function (_) { return (_ === null || _ === void 0 ? void 0 : _.length) > 0; })) || []), tags).join(', '));
        renderer.render(renderer.create("meta", { property: "blog-tags", content: tags.join(', ') })).on(html.head);
    };
}
exports.addTagMeta = addTagMeta;
//# sourceMappingURL=post.js.map